procs:
  # Services.
  ui-app:
    cwd: ui-app
    shell: trunk serve

  ms-router:
    cwd: ms-router
    shell: |
      lsof -i :3045 | grep "cargo-lam" --color=never | awk '{ print $2 }' | xargs --no-run-if-empty kill
      cargo lambda watch --features local --invoke-port 3045 --no-reload
    env:
      APOLLO_TELEMETRY_DISABLED: "1"
  invoke-router:
    shell: 'cargo lambda invoke --invoke-port 3045 --data-ascii ''{ "body": "query Query { me { name } }" }'''

  ms-gql-todo:
    cwd: ms-gql-todo
    shell: |
      lsof -i :3055 | grep "cargo-lam" --color=never | awk '{ print $2 }' | xargs --no-run-if-empty kill
      cargo lambda watch --invoke-port 3055
  invoke-todo:
    shell: 'cargo lambda invoke --invoke-port 3055 --data-ascii ''{"body": "{\"p_type\": \"todo\", \"age\": \"22\", \"username\": \"tehnix\", \"first\": \"test\", \"last\": \"ing\"}"}'''

  ms-gql-media:
    cwd: ms-gql-media
    shell: |
      lsof -i :3065 | grep "cargo-lam" --color=never | awk '{ print $2 }' | xargs --no-run-if-empty kill
      cargo lambda watch --invoke-port 3065
  invoke-media:
    shell: 'cargo lambda invoke --invoke-port 3065 --data-ascii ''{"body": "{ \"query\": \"{ media(id: \\\"123\\\") { id url } }\" }" }'''

  ms-queue:
    cwd: ms-queue
    shell: |
      lsof -i :3075 | grep "cargo-lam" --color=never | awk '{ print $2 }' | xargs --no-run-if-empty kill
      cargo lambda watch --invoke-port 3075
  invoke-queue:
    shell: 'cargo lambda invoke --invoke-port 3075 --data-ascii ''{"body": "hi"}'''

  # Infrastructure.
  localstack:
    # In the terminal directly:
    # EAGER_SERVICE_LOADING=1 DYNAMODB_SHARE_DB=1 SERVICES="sqs,sns,ses,dynamodb,eventbridge" localstack start --no-banner
    shell: |
      localstack logs --follow || localstack start --no-banner --detached && localstack logs --follow
    stop: SIGINT
    autostart: false
    eng:
      # Use a single database instead of separate databases for each credential and region.
      DYNAMODB_SHARE_DB: "1"
      # Limit the services we spin up, and start them immediately.
      EAGER_SERVICE_LOADING: "1"
      SERVICES: "sqs,sns,ses,dynamodb,eventbridge"
