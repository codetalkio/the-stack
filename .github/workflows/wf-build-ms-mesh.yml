name: 'Build: ms-mesh'

on:
  workflow_call:
    inputs:
      release:
        type: boolean
        default: false
      upload-artifact:
        type: boolean
        default: false

jobs:
  ms-mesh:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # We hash all depencies and project files, and if nothing has changed then we try
      # to restore from cache and skip the entire build.
      - name: Restore artifact from cache
        id: cached-artifact
        uses: actions/cache/restore@v3
        with:
          path: ms-mesh/dist
          key: ${{ hashFiles('ms-mesh/**') }}-${{ hashFiles('.github/workflows/wf-build-ms-mesh.yml') }}
          # Restore keys matche on the prefix, which will hit our uniquely generated key.
          restore-keys: ${{ hashFiles('ms-mesh/**') }}-${{ hashFiles('.github/workflows/wf-build-ms-mesh.yml') }}

      - uses: actions/setup-node@v3
        if: ${{ !steps.cached-artifact.outputs.cache-hit }}
        with:
          node-version: 18.18.2
      - uses: oven-sh/setup-bun@v1
        if: ${{ !steps.cached-artifact.outputs.cache-hit }}
      - uses: extractions/setup-just@v1
        if: ${{ !steps.cached-artifact.outputs.cache-hit }}

      - name: Install dependencies
        if: ${{ !steps.cached-artifact.outputs.cache-hit }}
        run: just setup ms-mesh

      - name: Build project
        if: ${{ !steps.cached-artifact.outputs.cache-hit }}
        run: just build ms-mesh


      - name: Save artifact to cache
        if: ${{ inputs.upload-artifact }}
        uses: actions/cache/save@v3
        with:
          path: ms-mesh/dist
          # Caches are immutable, so we need to use a new key every time, hence the run_id.
          key: ${{ steps.cached-artifact.outputs.cache-primary-key }}-${{ github.run_id }}

      - uses: actions/upload-artifact@v3
        if: ${{ inputs.upload-artifact }}
        with:
          name: ms-mesh
          path: ms-mesh/dist
          if-no-files-found: error
          retention-days: 1
