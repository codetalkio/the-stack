name: Check dependencies

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      toolchain:
        required: false
        type: string
        default: stable

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}

      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: ~/.cargo/bin
          key: bin-cargo-bin
          restore-keys: bin-cargo-

      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ inputs.working-directory }}/target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.working-directory }}
          restore-keys: cargo-

      - name: Install cargo check tools
        run: |
          # Lint dependencies.
          cargo install --locked cargo-deny || true
          # Find outdated dependencies.
          cargo install --locked cargo-outdated || true
          # Find unused dependencies.
          cargo install --locked cargo-udeps || true
          # Check for security vulnerabilities.
          cargo install --locked cargo-audit || true
          # Check for security vulnerabilities.
          cargo install --locked cargo-pants || true

      - name: Find outdated dependencies
        run: cargo outdated --exit-code 1
        working-directory: ${{ inputs.working-directory }}

      - name: Find unused dependencies
        run: cargo udeps
        working-directory: ${{ inputs.working-directory }}

      - name: Audit Cargo.lock for security vulnerabilities via RustSec Advisory Database
        run: |
          rm -rf ~/.cargo/advisory-db
          cargo audit
        working-directory: ${{ inputs.working-directory }}

      - name: Audit Cargo.lock for security vulnerabilities via Sonatype OSSIndex
        run: cargo pants
        working-directory: ${{ inputs.working-directory }}

      - name: Ling dependencies and their licenses
        run: cargo deny check --config ../.github/deny.toml --hide-inclusion-graph
        working-directory: ${{ inputs.working-directory }}
