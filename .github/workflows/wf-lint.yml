name: Build Lambda Microservice

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
      toolchain:
        required: false
        type: string
        default: stable

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          components: clippy
      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ inputs.working-directory }}/target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.working-directory }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo check --all
        working-directory: ${{ inputs.working-directory }}

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          components: rustfmt
      - run: cargo fmt --all -- --check
        working-directory: ${{ inputs.working-directory }}

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          components: clippy
      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ inputs.working-directory }}/target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.working-directory }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo clippy --all-targets -- -D clippy::all
        working-directory: ${{ inputs.working-directory }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ inputs.toolchain }}
          components: clippy
      - uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ${{ inputs.working-directory }}/target
          key: cargo-${{ hashFiles('**/Cargo.lock') }}-${{ inputs.working-directory }}
          restore-keys: ${{ runner.os }}-cargo-
      - run: cargo test
        working-directory: ${{ inputs.working-directory }}
